pTojA
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library('plyr')
library('ggplot2')
library('gridExtra')
library('CircStats')
library('compiler')
library('data.table')
library('PropCIs')
### models
model<-'series' # Roach et al. 2011 PROC R SOC B
### parameters
if (model=='roach') {
N<-1000
test<- 50
n<-29
sigma<-220.60
G0<-1 #very small
xA<-c(-100,0,100)
alpha<-0.41
sigmaA<-122.61
maxSOA<-(n-1)/2*50
x<-expand.grid(x=seq(-maxSOA,maxSOA,len=n))
xseq<-seq(-maxSOA-.5*maxSOA,maxSOA+.5*maxSOA,25)
xSeqDec<-seq(-1000,1000,200)
f<-function(xseq,x,xA=0,alpha=0){
Gi<-G0*(1-alpha*exp(-(x-xA)^2/(2*sigmaA^2)))
Gi*exp(-(xseq-x)^2/(2*sigma^2))
}
}
if (model=='series') {
N<-100
test<-45
n<-100 #channels
sigma<-1/3
G0<-50
alpha<-0.85
sigmaA<-22.5
xA<-0
x<-seq(-180+360/n,180,by=360/n)
xseq<-x
xSeqDec<-xseq
x<-data.frame(x)
f<-function(xseq,x,xA=0,alpha=0){
Gi<-G0*(1-alpha*exp(-(x-xA)^2/(2*sigmaA^2)))
Gi*exp((cos(rad(xseq-x))-1)/sigma)
}
}
if (model=='seriesSmall') {
N<-1000
test<-45
n<-100 #channels
sigma<-1/3
G0<-50
alpha<-0.85
sigmaA<-22.5
xA<-0
x<-seq(-180+360/n,180,by=360/n)
xseq<-seq(-180,180,by=.5)
xSeqDec<-seq(test-2,test+2,by=.5)
x<-data.frame(x)
f<-function(xseq,x,xA=0,alpha=0){
Gi<-G0*(1-alpha*exp(-(x-xA)^2/(2*sigmaA^2)))
Gi*exp((cos(rad(xseq-x))-1)/sigma)
}
}
f<-cmpfun(f)
### functions
funDecode<-function(tuningCurves,test,noise=T){
respPop<-tuningCurves[tuningCurves$xseq==test,]
if (noise) respPop$r<-sapply(respPop$r,function(x) rpois(1,x))
neglogL<-function (p) -sum(respPop$r*log(f(p,respPop$x)))+sum(f(p,respPop$x))
mle<-optimize(neglogL,c(min(xseq),max(xseq)))$minimum
data.frame(value=mle)
}
### No noise ###################################################################
tuningCurves<-ddply(x,.(x),function(d) data.frame(xseq,r=f(xseq,d$x)))
rPop<-tuningCurves[tuningCurves$xseq==test,]
decodedTest<-funDecode(tuningCurves,test,noise=F)
pTuning<-ggplot(data=tuningCurves)+
geom_line(aes(x=xseq,y=r,group=x,color='tuning'))+
geom_point(data=rPop,aes(x=x,y=r))+
geom_vline(data=data.frame(test),aes(xintercept=test,color='test'))+
geom_vline(data=data.frame(decodedTest),aes(xintercept=value,color='decoded'))+
xlim(min(xseq),max(xseq))
pTuning
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tuningCurves<-ddply(x,.(x),function(d) data.frame(xseq,r=f(xseq,d$x)))
rPop<-tuningCurves[tuningCurves$xseq==test,]
decodedTest<-funDecode(tuningCurves,test,noise=F)
pTuning<-ggplot(data=tuningCurves)+
geom_line(aes(x=xseq,y=r,group=x,color='tuning'))+
geom_point(data=rPop,aes(x=x,y=r))+
geom_vline(data=data.frame(test),aes(xintercept=test,color='test'))+
geom_vline(data=data.frame(decodedTest),aes(xintercept=value,color='decoded'))+
xlim(min(xseq),max(xseq))
pTuning
xseq<-x
xseq
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tuningCurves
rPop
test
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
### 2 intervals forced choice
### functions
averages<-function(d,y) {
n<-length(d[[y]])
nyes<-sum(d[[y]])
nno<-n-nyes
y<-nyes/n
ci<-exactci(nyes,n,.95)$conf.int
ymin<-ci[[1]]; ymax<-ci[[2]]
data.frame(nyes,nno,n,y,ymin,ymax)
}
cumNorm<-function(x,p,m) (1/m)+(1-1/m)*pnorm(x,p[1],p[2])
cumNormQ<-function(y,p,m) qnorm((y-(1/m))/(1-1/m),p[1],p[2])
likeL<-function(p,d,x,FUN,m){
pr<-FUN(d[[x]],p,m)
-sum(d$nyes*log(pr)+d$nno*log(1-pr))
}
curveFun<-function(d,x,FUN=cumNorm,m=2,xmin=min(d[[x]]),xmax=max(d[[x]])){
### initial parameters
thre<-1/m+.5*(1-1/m)
pIni<-d[[x]][which.min(abs(d$y-thre))]
pIni<-c(pIni,(thre-1/m)/(pIni-test))
print(pIni)
p<-optim(pIni,likeL,d=d,x=x,FUN=FUN,m=m)$par
xseq<-seq(xmin,xmax,len=100)
yseq<-FUN(xseq,p,m)
data.frame(x=xseq,y=yseq)
}
decodedSampleXs0<-subset(decodedSampleXs,xseq==test)
decodedSampleXsNo0<-subset(decodedSampleXs,xseq!=test)
forChoicSamples<-ddply(decodedSampleXsNo0,.(xseq,sample),function(d){
d0<-subset(decodedSampleXs0,sample==d$sample)
if (d$xseq>test) k<-sign(d$value-d0$value)
else k<-sign(-d$value+d0$value)
p<-.5*k+.5
data.frame(p)
})
forChoic<-ddply(forChoicSamples,.(xseq),function(d) averages(d,'p'))
forChoic$sign[forChoic$xseq<test]<-'neg'
forChoic$sign[forChoic$xseq>test]<-'pos'
forChoicPos<-forChoic
forChoicPos$xseq[forChoicPos$sign=='neg']<-
-forChoicPos$xseq[forChoicPos$sign=='neg']+2*test
curves<-ddply(forChoicPos,.(sign),function(d) curveFun(d,'xseq'))
curves$x[curves$sign=='neg']<- 2*test-curves$x[curves$sign=='neg']
decodedSampleXs0A<-subset(decodedSampleXsA,xseq==test)
decodedSampleXsPosNo0<-subset(decodedSampleXsA,xseq!=test)
forChoicSamplesA<-ddply(decodedSampleXsPosNo0,.progress='text',
.(xseq,sample,xA),function(d){
d0<-subset(decodedSampleXs0A, xA==d$xA & sample==d$sample)
if (d$xseq>test) k<-sign(d$value-d0$value)
else k<-sign(-d$value+d0$value)
p<-.5*k+.5
data.frame(p)
})
forChoicA<-ddply(forChoicSamplesA,.(xseq,xA),function(d) averages(d,'p'))
forChoicA$sign[forChoicA$xseq<test]<-'neg'
forChoicA$sign[forChoicA$xseq>test]<-'pos'
forChoicAPos<-forChoicA
forChoicAPos$xseq[forChoicAPos$sign=='neg']<-
-forChoicAPos$xseq[forChoicAPos$sign=='neg']+2*test
curvesA<-ddply(forChoicAPos,.(xA,sign),function(d) curveFun(d,'xseq'))
curvesA$x[curvesA$sign=='neg']<- 2*test-curvesA$x[curvesA$sign=='neg']
pForChoic<-ggplot()+
geom_point(data=forChoic,aes(x=xseq,y=y,color='no adapt'))+
geom_line(data=curves,aes(x=x,y=y,color='no adapt'))+
geom_point(data=forChoicA,aes(x=xseq,y=y,color='adapt'))+
geom_line(data=curvesA,aes(x=x,y=y,color='adapt'))
pForChoic
c(.2,.4,.6,.8,1)*.25
a<-c(1,2,3)
a<-c(1,2,3)
a
a[[-1]]
a[-1]
source('~/.active-rstudio-document', echo=TRUE)
dat
source('~/.active-rstudio-document', echo=TRUE)
optim(c(1,1,1,.1), negLogL,d=dat,fun=psychoFromTransd)$par
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dat
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
p<-p+geom_line(data=data.frame(x,psychoFromTransd),aes(x=x,y=psychoFromTransd))
p<-p+geom_line(data=data.frame(x,psychoFromTransd),aes(x=x,y=psychoFromTransd))
p
data.frame(x,psychoFromTransd)
psychoFromTransd(x,MLEparameters)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible/functions.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
theme_set(theme_grey())
source('~/.active-rstudio-document', echo=TRUE)
psychoFromTransd(x,c(1,1,1,1))
source('~/.active-rstudio-document', echo=TRUE)
psychoFromTransd(x,c(1,1,1,.1))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
xSeq<-seq(0,1,.01)
yTransd<-mu(xSeq,c(1,1,1))
example1<-data.frame(xSeq,yTransd)
qplot(example1,xSeq,yTransd)
qplot(xSeq,yTransd,example1)
qplot(xSeq,yTransd,example1,geom='line')
yTransd2<-mu(xSeq,c(1,1,2))
example2<-data.frame(xSeq,yTransd2)
qplot(xSeq,yTransd2,example2,geom='line')
n<-100
pedestal1<-0
x1<-c(0.05,0.10,0.15,0.20,0.25) # contrast of the variable
k1<-c(59,56,69,90,96) # number of times that the observer reports that the variable has higher contrast
y1<-k1/n
dat1<-data.frame(x=x1,k=k1,y=y1,pedestal=pedestal1)
dat1
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
ySeqEx1<-psychoFromTransd0(xSeq,c(1,1,1,.1))
examplePsycho1<-data.frame(xSeq,yTransdEx1)
qplot(xSeq,ySeqEx1,examplePsycho1,geom='line')
ySeqEx2<-psychoFromTransd0(xSeq,c(1,1,2,.3))
examplePsycho2<-data.frame(xSeq,yTransdEx2)
qplot(xSeq,ySeqEx2,examplePsycho2,geom='line')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
datD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
psychoFromTransd
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
negLogLD<-function(p,d,fun) {
print(p)
negLogForEachPedestal<-ddply(d,.(pedestal),function(d2){
print(unique(d2$pedestal))
phi<-fun(d2$x,unique(d2$pedestal),p)
negLog<- -sum( d2$k*log(phi)+(n-d2$k)*log(1-phi))
data.frame(negLog)
})
sum(negLogForEachPedestal$negLog)
}
MLEparametersD<-optim(c(1,1,1,.1), negLogL,d=datD,fun=psychoFromTransd)$par
MLEparametersD
negLogLD<-function(p,d,fun) {
print(p)
negLogForEachPedestal<-ddply(d,.(pedestal),function(d2){
print(unique(d2$pedestal))
phi<-fun(d2$x,unique(d2$pedestal),p)
negLog<- -sum( d2$k*log(phi)+(n-d2$k)*log(1-phi))
data.frame(negLog)
})
sum(negLogForEachPedestal$negLog)
}
MLEparametersD<-optim(c(1,1,1,.1), negLogLD,d=datD,fun=psychoFromTransd)$par
MLEparametersD
negLogLD<-function(p,d,fun) {
negLogForEachPedestal<-ddply(d,.(pedestal),function(d2){
phi<-fun(d2$x,unique(d2$pedestal),p)
negLog<- -sum( d2$k*log(phi)+(n-d2$k)*log(1-phi))
data.frame(negLog)
})
sum(negLogForEachPedestal$negLog)
}
MLEparametersD<-optim(c(1,1,1,.1), negLogLD,d=datD,fun=psychoFromTransd)$par
MLEparametersD
pedestals<-c(0,.25,.5,.75)
pedestals[1]
pedestals
curves<-ddply(data.frame(pedestals),.(pedestals),function(d){
ySeq<-psychoFromTransd(xSeq,d$pedestals,MLEparameters)
data.frame(xSeq,ySeq)
})
p<-p+geom_line(data=curves,aes(x=xSeq,ySeq,color=factor(pedestal)))
p
pD
curves<-ddply(data.frame(pedestals),.(pedestals),function(d){
ySeq<-psychoFromTransd(xSeq,d$pedestals,MLEparameters)
data.frame(xSeq,ySeq)
})
pD<-pD+geom_line(data=curves,aes(x=xSeq,ySeq,color=factor(pedestal)))
pD
pD
datD
curves
head(curves)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
curves<-ddply(data.frame(pedestal),.(pedestal),function(d){
xSeq<-seq(min(d$x),max(d$y),by=.01)
ySeq<-psychoFromTransd(xSeq,d$pedestal,MLEparameters)
data.frame(xSeq,ySeq)
})
pD<-pD+geom_line(data=curves,aes(x=xSeq,ySeq,color=factor(pedestal)))
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
curves<-ddply(data.frame(pedestal),.(pedestal),function(d){
xSeq<-seq(d$pedestal,d$pedestal+.25,by=.01)
ySeq<-psychoFromTransd(xSeq,d$pedestal,MLEparameters)
data.frame(xSeq,ySeq)
})
pD<-pD+geom_line(data=curves,aes(x=xSeq,ySeq,color=factor(pedestal)))
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
yTransdD<-mu(xSeq,MLEparametersD)
qplot(xSeq,yTransdD,data.frame(xSeq,yTransdD),geom='line')
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
MLEparametersD
source('~/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible/functions.R', echo=TRUE)
nBoot<-1000
ythre<-.75
### Reading data
dat<-read.files(subject='',exp='Discrimination')
dat$subject<-factor(dat$subject,levels=c('DL','SN','MT','RH','MS','KN'))
NS<-'No surround   '; SY<-'Synchronous surround   '; SU<-'Sustained surround   '
conditions<-c(NS,SY,SU)
dat$figure<-factor(dat$figure,levels=c(3,1,2),labels=conditions)
dat$cohComparison<-2*dat$cohComparison
dat$cohComparison<-.01*dat$cohComparison
dat$x<-dat$coherence
### Number of trials
nTrials<-ddply(dat,.(subject,cohComparison,coherence),function(df) {
number.measures<-length(df$response)
data.frame(number.measures)
})
nTrials
################
### Figure 2 ###
################
### Figure 2A
av<-ddply(dat,.(subject,x,figure,cohComparison),function(d) averages(d))
curve<-ddply(av,.(subject,figure,cohComparison),
source('~/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible/functions.R', echo=TRUE)
nBoot<-1000
ythre<-.75
### Reading data
dat<-read.files(subject='',exp='Discrimination')
dat$subject<-factor(dat$subject,levels=c('DL','SN','MT','RH','MS','KN'))
NS<-'No surround   '; SY<-'Synchronous surround   '; SU<-'Sustained surround   '
conditions<-c(NS,SY,SU)
dat$figure<-factor(dat$figure,levels=c(3,1,2),labels=conditions)
dat$cohComparison<-2*dat$cohComparison
dat$cohComparison<-.01*dat$cohComparison
dat$x<-dat$coherence
### Number of trials
nTrials<-ddply(dat,.(subject,cohComparison,coherence),function(df) {
number.measures<-length(df$response)
data.frame(number.measures)
})
nTrials
################
### Figure 2 ###
################
### Figure 2A
av<-ddply(dat,.(subject,x,figure,cohComparison),function(d) averages(d))
curve<-ddply(av,.(subject,figure,cohComparison),
setwd("/Users/daniellinares/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible")
nBoot<-1000
ythre<-.75
### Reading data
dat<-read.files(subject='',exp='Discrimination')
dat$subject<-factor(dat$subject,levels=c('DL','SN','MT','RH','MS','KN'))
NS<-'No surround   '; SY<-'Synchronous surround   '; SU<-'Sustained surround   '
conditions<-c(NS,SY,SU)
dat$figure<-factor(dat$figure,levels=c(3,1,2),labels=conditions)
dat$cohComparison<-2*dat$cohComparison
dat$cohComparison<-.01*dat$cohComparison
dat$x<-dat$coherence
### Number of trials
nTrials<-ddply(dat,.(subject,cohComparison,coherence),function(df) {
number.measures<-length(df$response)
data.frame(number.measures)
})
nTrials
################
### Figure 2 ###
################
### Figure 2A
av<-ddply(dat,.(subject,x,figure,cohComparison),function(d) averages(d))
curve<-ddply(av,.(subject,figure,cohComparison),
dat<-read.files(subject='',exp='Discrimination')
dat<-read.files(subject='',exp='Discrimination')
setwd("/Users/daniellinares/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible")
nBoot<-1000
ythre<-.75
### Reading data
dat<-read.files(subject='',exp='Discrimination')
dat$subject<-factor(dat$subject,levels=c('DL','SN','MT','RH','MS','KN'))
NS<-'No surround   '; SY<-'Synchronous surround   '; SU<-'Sustained surround   '
conditions<-c(NS,SY,SU)
dat$figure<-factor(dat$figure,levels=c(3,1,2),labels=conditions)
dat$cohComparison<-2*dat$cohComparison
dat$cohComparison<-.01*dat$cohComparison
dat$x<-dat$coherence
### Number of trials
nTrials<-ddply(dat,.(subject,cohComparison,coherence),function(df) {
number.measures<-length(df$response)
data.frame(number.measures)
})
nTrials
################
### Figure 2 ###
################
### Figure 2A
av<-ddply(dat,.(subject,x,figure,cohComparison),function(d) averages(d))
av
z<-subset(av,subject=='SN')
z
z
zz<-subset(z,figure==SY)
zz
zz
zzz<-subset(z,cohComparison==0)
zzz
zzz<-subset(zz,cohComparison==0)
zzz
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
zzz<-subset(zz,cohComparison==.2)
zzz
pedestal[2]+c(0.05,0.10,0.15,0.20,0.25)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
k2<-c(58,80,90,95,97)
y2<-k1/n
dat2<-data.frame(x=x2,k=k2,y=y2,pedestal=pedestal[2])
x3<-pedestal[3]+c(0.05,0.10,0.15,0.20,0.25)
k3<-c(50,62,70,79,96)
y3<-k3/n
dat3<-data.frame(x=x3,k=k3,y=y3,pedestal=pedestal[3])
x4<-pedestal[4]+c(0.05,0.10,0.15,0.20,0.25)
k4<-c(50,62,65,67,69)
y4<-k4/n
dat4<-data.frame(x=x4,k=k4,y=y4,pedestal=pedestal[4])
datD<-rbind(dat1,dat2,dat3,dat4)
pD<-ggplot()+
geom_point(data=datD,aes(x=x,y=y,color=factor(pedestal)))
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
library('ggplot2')
n<-100
pedestal<-c(0,.25,.5,.75)
x1<-pedestal[1]+c(0.05,0.10,0.15,0.20,0.25) # contrast of the variable
k1<-c(59,62,70,82,90) # number of times that the observer reports that the variable has higher contrast
y1<-k1/n
dat1<-data.frame(x=x1,k=k1,y=y1,pedestal=pedestal[1])
x2<-pedestal[2]+c(0.05,0.10,0.15,0.20,0.25)
k2<-c(58,80,90,95,97)
y2<-k1/n
dat2<-data.frame(x=x2,k=k2,y=y2,pedestal=pedestal[2])
x3<-pedestal[3]+c(0.05,0.10,0.15,0.20,0.25)
k3<-c(50,62,70,79,96)
y3<-k3/n
dat3<-data.frame(x=x3,k=k3,y=y3,pedestal=pedestal[3])
x4<-pedestal[4]+c(0.05,0.10,0.15,0.20,0.25)
k4<-c(50,62,65,67,69)
y4<-k4/n
dat4<-data.frame(x=x4,k=k4,y=y4,pedestal=pedestal[4])
datD<-rbind(dat1,dat2,dat3,dat4)
pD<-ggplot()+
geom_point(data=datD,aes(x=x,y=y,color=factor(pedestal)))
pD
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
zzz<-subset(zz,cohComparison==.6)
zzz
zz
zzz<-subset(zz,cohComparison==.4)
zzz
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
MLEparametersD
qplot(xSeq,yTransdD,data.frame(xSeq,yTransdD),geom='line')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
theme_set(theme_grey())
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
qplot(xSeq,yTransdD,data.frame(xSeq,yTransdD),geom='line')
source('~/My Cubby/p old/2013 JOV surround pedestal/JOV/reproducible/functions.R', echo=TRUE)
